# app.py (Backend - Flask)

from flask import Flask, render_template, request, jsonify, redirect, url_for, session
from flask_sqlalchemy import SQLAlchemy
from werkzeug.utils import secure_filename
import os

app = Flask(__name__)
app.secret_key = os.urandom(24)  # Secret key for session management
app.config['UPLOAD_FOLDER'] = 'uploads'
app.config['ALLOWED_EXTENSIONS'] = {'txt', 'pdf', 'png', 'jpg', 'jpeg', 'gif'}

# Configure SQLAlchemy for database
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///malware.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

# Model for User
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(50), unique=True, nullable=False)
    password = db.Column(db.String(100), nullable=False)

# Model for Malware
class Malware(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)

# Dummy data for detected malware
detected_malware = ['malware1', 'malware2', 'malware3']

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in app.config['ALLOWED_EXTENSIONS']

@app.route('/')
def index():
    if 'username' in session:
        return render_template('index.html', malware=detected_malware)
    else:
        return redirect(url_for('login'))

@app.route('/remove_malware', methods=['POST'])
def remove_malware():
    if 'username' in session:
        malware_name = request.form.get('malware_name')
        if malware_name in detected_malware:
            detected_malware.remove(malware_name)
            return jsonify({'success': True})
        else:
            return jsonify({'success': False, 'error': 'Malware not found'})
    else:
        return jsonify({'success': False, 'error': 'Unauthorized'})

@app.route('/scan_malware', methods=['POST'])
def scan_malware():
    if 'username' in session:
        if 'file' not in request.files:
            return jsonify({'success': False, 'error': 'No file part'})
        uploaded_file = request.files['file']
        if uploaded_file.filename == '':
            return jsonify({'success': False, 'error': 'No selected file'})
        if uploaded_file and allowed_file(uploaded_file.filename):
            filename = secure_filename(uploaded_file.filename)
            file_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
            uploaded_file.save(file_path)
            # Placeholder logic for scanning the file
            return jsonify({'success': True, 'message': 'File scanned successfully'})
        else:
            return jsonify({'success': False, 'error': 'Invalid file type'})
    else:
        return jsonify({'success': False, 'error': 'Unauthorized'})

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form.get('username')
        password = request.form.get('password')
        user = User.query.filter_by(username=username).first()
        if user and user.password == password:
            session['username'] = username
            return redirect(url_for('index'))
        else:
            return render_template('login.html', error='Invalid username or password')
    else:
        return render_template('login.html', error=None)

@app.route('/logout')
def logout():
    session.pop('username', None)
    return redirect(url_for('login'))

if __name__ == '__main__':
    if not os.path.exists(app.config['UPLOAD_FOLDER']):
        os.makedirs(app.config['UPLOAD_FOLDER'])
    db.create_all()
    app.run(debug=True)
